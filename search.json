[{"path":"https://steveneschrich.github.io/tmautils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 tmautils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://steveneschrich.github.io/tmautils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steven Eschrich. Author, maintainer.","code":""},{"path":"https://steveneschrich.github.io/tmautils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eschrich S (2023). tmautils: Utilities Managing Tissue Microarray Data. R package version 0.1.0, https://steveneschrich.github.io/tmautils/.","code":"@Manual{,   title = {tmautils: Utilities for Managing Tissue Microarray Data},   author = {Steven Eschrich},   year = {2023},   note = {R package version 0.1.0},   url = {https://steveneschrich.github.io/tmautils/}, }"},{"path":"https://steveneschrich.github.io/tmautils/index.html","id":"tmautils","dir":"","previous_headings":"","what":"Utilities for Managing Tissue Microarray Data","title":"Utilities for Managing Tissue Microarray Data","text":"R package managing tissue microarray (TMA) data. type data relatively low density molecular readouts consisting individual tissue cores arranged slide antibody-based evaluation target expression. Traditionally, cores evaluated pathologist scored according intensity stain /percentage cells core stained. package provides tools managing type data. Note data management utilities rather analytical utilities.","code":""},{"path":"https://steveneschrich.github.io/tmautils/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Utilities for Managing Tissue Microarray Data","text":"package currently available github R package. install,","code":"devtools::install_github(\"steveneschrich/tmautils\")"},{"path":"https://steveneschrich.github.io/tmautils/index.html","id":"key-functionality","dir":"","previous_headings":"","what":"Key Functionality","title":"Utilities for Managing Tissue Microarray Data","text":"two main functions package (currently): core2map() find_tma_alignment(). core2map() display value field (instance, intensity core name) 2D arrangement defined TMA (rows columns). find_tma_alignment() try orient particular TMA result reference orientation. Multiple stains can performed TMA, often orientations differ time. tries find correction (re)orientation new result back original orientation.","code":""},{"path":"https://steveneschrich.github.io/tmautils/index.html","id":"data-representation","dir":"","previous_headings":"","what":"Data Representation","title":"Utilities for Managing Tissue Microarray Data","text":"library assumes TMA data represented flat data frame consisting one row per observation. , something form: different one might normally think TMA : However, several key advantages: Data analysis post-QC becomes easier since data table observations (e.g., intensity) rather 2D matrix intensities. Reorientation (row/col coordinates must changed) less impactful downstream analysis Multiple measurements per core just additional rows table. particular, associating core id particular position means analysis typical (one observation/patient multiple measurements).","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/alignment_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Alignment function list — alignment_functions","title":"Alignment function list — alignment_functions","text":"list alignments rotate/flip matrix.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/alignment_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignment function list — alignment_functions","text":"","code":"alignment_functions"},{"path":"https://steveneschrich.github.io/tmautils/reference/alignment_functions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alignment function list — alignment_functions","text":"object class list length 8.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/alignment_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alignment function list — alignment_functions","text":"Sometimes TMA result captured different orientation initial design description. case, row column numbers refer back correct location. markers (blanks) many TMAs can help orient result back design. list set operators can applied matrix rotate /flip matrix different orientations. consists different transpose reverse operators different orders generate various permutations. Note contents list quoted functions, can print function. like use function, need use base::eval() evaluate .","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/all_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Test that all data frame columns are logical — all_logical","title":"Test that all data frame columns are logical — all_logical","text":"Test data frame columns logical","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/all_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test that all data frame columns are logical — all_logical","text":"","code":"all_logical(.x)"},{"path":"https://steveneschrich.github.io/tmautils/reference/all_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test that all data frame columns are logical — all_logical","text":".x data frame","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/all_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test that all data frame columns are logical — all_logical","text":"logical indicating elements .x logical","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/any_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if any elements of data frame are na — any_missing","title":"Test if any elements of data frame are na — any_missing","text":"Test elements data frame na","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/any_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if any elements of data frame are na — any_missing","text":"","code":"any_missing(.x)"},{"path":"https://steveneschrich.github.io/tmautils/reference/any_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if any elements of data frame are na — any_missing","text":".x data frame","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/any_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if any elements of data frame are na — any_missing","text":"logical indicating elements na","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/any_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if any elements of data frame are na — any_missing","text":"","code":"if (FALSE) { any_missing(data.frame(A=c(1,2,3),B=c(2,NA,4))) # returns [1] TRUE }"},{"path":"https://steveneschrich.github.io/tmautils/reference/core2map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame from flat TMA coordinates — core2map","title":"Create a data frame from flat TMA coordinates — core2map","text":"Create data frame flat TMA coordinates","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/core2map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame from flat TMA coordinates — core2map","text":"","code":"core2map(x, row, col, val = NULL)"},{"path":"https://steveneschrich.github.io/tmautils/reference/core2map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame from flat TMA coordinates — core2map","text":"x data frame use row column name TMA row information col column name TMA column information val column display cell. omitted (NULL), generate coordinate display (row,col).","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/core2map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame from flat TMA coordinates — core2map","text":"data frame representing row/col arrangement table","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/equal_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute overlap of equal values between two tables — equal_overlap","title":"Compute overlap of equal values between two tables — equal_overlap","text":"Compute overlap equal values two tables","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/equal_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute overlap of equal values between two tables — equal_overlap","text":"","code":"equal_overlap(reference, target)"},{"path":"https://steveneschrich.github.io/tmautils/reference/equal_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute overlap of equal values between two tables — equal_overlap","text":"reference table representing reference state compare target Another table may overlap values reference","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/equal_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute overlap of equal values between two tables — equal_overlap","text":"percentage equal values overlap (number overlapping divided total elements reference)","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/equal_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute overlap of equal values between two tables — equal_overlap","text":"","code":"if (FALSE) { equal_overlap() }"},{"path":"https://steveneschrich.github.io/tmautils/reference/find_tma_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Find TMA alignment between reference matrix and target matrix — find_tma_alignment","title":"Find TMA alignment between reference matrix and target matrix — find_tma_alignment","text":"Perform various transforms target matrix align missingness patterns reference matrix. translated coordinates returned.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/find_tma_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find TMA alignment between reference matrix and target matrix — find_tma_alignment","text":"","code":"find_tma_alignment(reference, target)"},{"path":"https://steveneschrich.github.io/tmautils/reference/find_tma_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find TMA alignment between reference matrix and target matrix — find_tma_alignment","text":"reference matrix/data.frame representing reference TMA design target matrix/data.frame representing stain data may reversed transposed.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/find_tma_alignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find TMA alignment between reference matrix and target matrix — find_tma_alignment","text":"data.frame row/column indexes original (src) frame reference desired (reference) frame reference.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/find_tma_alignment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find TMA alignment between reference matrix and target matrix — find_tma_alignment","text":"Given matrix representing TMA result, goal find transform target matrix aligns missingness patterns target reference matrix. content matrices matter; missingness patterns matched. Since possible missingness target include missing cores, goal find orientation matches reference missing cores. done, translation coordinates reference target provided. translations considered transpose column reverse. Combinations operators result possible shifts: right/left rotate, flip long short edge. assumed one transformations lead perfect alignment missingness patterns. output function assumes reference \"correct\", therefore coordinates form row_index reference's frame reference. src_row_index represents target's frame reference.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/generate_alignment_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating row/column mapping using an alignment function — generate_alignment_mapping","title":"Generating row/column mapping using an alignment function — generate_alignment_mapping","text":"Create mapping source data frame desired transform.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/generate_alignment_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating row/column mapping using an alignment function — generate_alignment_mapping","text":"","code":"generate_alignment_mapping(target, align_fun = alignment_functions[[1]])"},{"path":"https://steveneschrich.github.io/tmautils/reference/generate_alignment_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating row/column mapping using an alignment function — generate_alignment_mapping","text":"target target(transformed) matrix generate mappings align_fun alignment function mappings used","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/generate_alignment_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating row/column mapping using an alignment function — generate_alignment_mapping","text":"table source target mappings","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/generate_alignment_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating row/column mapping using an alignment function — generate_alignment_mapping","text":"Assuming alignment (rotation/reverse) known, create mapping coordinates src coordinate system (rotation) reference system defined transform. result data frame prefix src original coordinates (labels index) transformed (presumably corrected) coordinate system (labels index). instance, source row columns indexes src_row_index src_col_index. corrected row/col index row_index col_index.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/missing_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute overlap of missingness in two tables — missing_overlap","title":"Compute overlap of missingness in two tables — missing_overlap","text":"Given two tables (data frames matrices), function computes proportion (reference) overlap missing values reference target table.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/missing_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute overlap of missingness in two tables — missing_overlap","text":"","code":"missing_overlap(reference, target)"},{"path":"https://steveneschrich.github.io/tmautils/reference/missing_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute overlap of missingness in two tables — missing_overlap","text":"reference table representing reference state compare target Another table may overlap missingness reference","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/missing_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute overlap of missingness in two tables — missing_overlap","text":"percentage missing value overlap (number overlapping divided total missing reference)","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/missing_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute overlap of missingness in two tables — missing_overlap","text":"function takes two tables (data frames matrices) can contain missing data values. output function percentage overlapped missing values two tables relative number missing values reference (first argument). example, consider tissue microarray matrix M size NxP (reference). first five rows first value missing M[1:5,1] NA. consider target matrix T size NxP (target). matrix first element missing M[1,1] NA. case, overlap one position (M[1,1]) divided 5 positions (reference), 0.2. function can helpful trying identify orientations tissue microarray case one set data rotated/flipped reference definition TMA. happen, one calculate overlap many different orientations find one best aligns reference.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/missing_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute overlap of missingness in two tables — missing_overlap","text":"","code":"if (FALSE) { missing_overlap(data.frame(a=c(1,NA),b=c(2,NA)), data.frame(ap=c(2,NA), bp = c(2,3))) # Returns [1] 0.5 }"},{"path":"https://steveneschrich.github.io/tmautils/reference/td.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a matrix/data frame into a data frame — td","title":"Transpose a matrix/data frame into a data frame — td","text":"Transpose matrix/data frame data frame, preserving col/row names ensuring result data frame.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/td.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a matrix/data frame into a data frame — td","text":"","code":"td(.x)"},{"path":"https://steveneschrich.github.io/tmautils/reference/td.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose a matrix/data frame into a data frame — td","text":".x matrix data frame transpose","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/td.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose a matrix/data frame into a data frame — td","text":"transposed matrix data frame, returned data frame.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/td.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transpose a matrix/data frame into a data frame — td","text":"find cleaner way . appears base::t() transpose data.frame matrix, data.frame. normally fine, want use base::rev() function, different behavior matrix data frame. Specifically, using base::rev() matrix yields reversed vector. minimum (application), transpose convert back data.frame. general case, easy guarantee transposed columns type row--row. R type conversion , problem extreme. addition needing convert types, need ignore problems colnames transposing since may clean. Data frames typically , although think perhaps behavior changed time. function task transposing converting back data frame without changing col/row names (transposing well).","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/try_data_frame_alignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Try various alignments of two data frames — try_data_frame_alignments","title":"Try various alignments of two data frames — try_data_frame_alignments","text":"Try various transformations target data frame align reference data frame. overlap function provides quality alignment.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/try_data_frame_alignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try various alignments of two data frames — try_data_frame_alignments","text":"","code":"try_data_frame_alignments(   reference,   target,   align_fun = tmautils::alignment_functions,   overlap_fun = missing_overlap )"},{"path":"https://steveneschrich.github.io/tmautils/reference/try_data_frame_alignments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try various alignments of two data frames — try_data_frame_alignments","text":"reference data frame assumed contain 2D TMA representation known TMA orientation. target data frame may alternate 2D TMA representation , transformation, can match reference. align_fun Alignment function(s) used rotate, etc target data frame. overlap_fun function suitable evaluating overlap transformed target compared reference.","code":""},{"path":"https://steveneschrich.github.io/tmautils/reference/try_data_frame_alignments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try various alignments of two data frames — try_data_frame_alignments","text":"list alignment results (elements overlap transform) indicating quality alignment transform.","code":""}]
